{"version":3,"sources":["main.js"],"names":["currentLang","window","localStorage","getItem","capsLockStatus","shiftStatus","GitURL","invisibleSymbols","enAlphabet","ruAlphabet","keys1","codeKeys1","keys2","codeKeys2","keys3","codeKeys3","keys4","codeKeys4","keys5","codeKeys5","keysAll","codeKeysAll","createNewElement","tag","className","target","innerText","element","document","createElement","classList","add","append","appendKeys","key","row","indexes","i","j","lower","upper","ruFirst","ruSecond","map","el","text","chooseButton","buttons","event","length","find","button","Array","from","includes","code","findPressedButton","keyCaps","current","filter","value","keyboardLangChanger","keyboard","keyboardKeys","querySelectorAll","flag","contains","forEach","lowerSpan","querySelector","upperSpan","style","backgroundImage","remove","capsLockChanger","toLowerCase","toggle","languageChanger","symbolKit","kit","shiftButtonHandler","status","body","h1","textarea","addEventListener","preventDefault","focus","languageBar","keys","index","ctrlKey","altKey","setItem","cur","selectionStart","start","currentCharArray","split","splice","join","setSelectionRange","newSymbol","open","slice","keyDivs","customKey","undefined","keyDown","KeyboardEvent","keyUp","e","dispatchEvent"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["let currentLang = window.localStorage.getItem('lang') ?? 'en';\nlet capsLockStatus = false;\nlet shiftStatus = false;\nconst GitURL = 'https://github.com/bmspd';\nconst invisibleSymbols = ['Control', 'CapsLock', 'Alt',\n  'Shift', 'Delete', 'Backspace', 'Tab', 'Meta', 'ArrowUp',\n  'ArrowLeft', 'ArrowDown', 'ArrowRight'];\nconst enAlphabet = 'qwertyuiopasdfghjklzxcvbnm';\nconst ruAlphabet = 'йцукенгшщзхъфывапролджэёячсмитьбю';\nconst keys1 = [['§', '±', '>', '<'], ['1', '!'], ['2', '@', '\"'], ['3', '#', '№'],\n  ['4', '$', '%'], ['5', '%', ':'], ['6', '^', ','], ['7', '&', '.'],\n  ['8', '*', ';'], ['9', '('], ['0', ')'], ['-', '_'], ['=', '+'], ['Backspace', 'Backspace'], ['Git', 'Git']];\nconst codeKeys1 = ['Backquote', 'Digit1', 'Digit2',\n  'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7',\n  'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace', 'Git'];\nconst keys2 = [['Tab', 'Tab'], ['q', 'Q', 'й', 'Й'], ['w', 'W', 'ц', 'Ц'], ['e', 'E', 'у', 'У'],\n  ['r', 'R', 'к', 'К'], ['t', 'T', 'е', 'Е'], ['y', 'Y', 'н', 'Н'], ['u', 'U', 'г', 'Г'],\n  ['i', 'I', 'ш', 'Ш'], ['o', 'O', 'щ', 'Щ'], ['p', 'P', 'з', 'З'], ['[', '{', 'х', 'Х'],\n  [']', '}', 'ъ', 'Ъ'], ['Delete', 'Delete'], ['Lan', 'Lan']];\nconst codeKeys2 = ['Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR',\n  'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Delete', 'Lan'];\nconst keys3 = [['CapsLock', 'CapsLock'], ['a', 'A', 'ф', 'Ф'], ['s', 'S', 'ы', 'Ы'],\n  ['d', 'D', 'в', 'В'], ['f', 'F', 'а', 'А'], ['g', 'G', 'п', 'П'], ['h', 'H', 'р', 'Р'],\n  ['j', 'J', 'о', 'О'], ['k', 'K', 'л', 'Л'], ['l', 'L', 'д', 'Д'], [';', ':', 'ж', 'Ж'],\n  ['\\'', '\"', 'э', 'Э'], ['\\\\', '|', 'ё', 'Ё'], ['Enter', 'Enter']];\nconst codeKeys3 = ['CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF',\n  'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Backslash', 'Enter'];\nconst keys4 = [['Shift', 'Shift'], ['`', '~', ']', '['], ['z', 'Z', 'я', 'Я'], ['x', 'X', 'ч', 'Ч'],\n  ['c', 'C', 'с', 'С'], ['v', 'V', 'м', 'М'], ['b', 'B', 'и', 'И'], ['n', 'N', 'т', 'Т'],\n  ['m', 'M', 'ь', 'Ь'], [',', '<', 'б', 'Б'], ['.', '>', 'ю', 'Ю'], ['/', '?', '/', '?'],\n  ['Shift', 'Shift'], ['⤒', '⤒'], ['♺', '♺']];\nconst codeKeys4 = ['ShiftLeft', 'IntlBackslash', 'KeyZ', 'KeyX', 'KeyC',\n  'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ShiftRight', 'ArrowUp'];\nconst keys5 = [['Ctrl', 'Ctrl'], ['⌥', '⌥'], ['⌘', '⌘'],\n  ['Spacebar', 'Spacebar'], ['⌘', '⌘'], ['⌥', '⌥'], ['Ctrl', 'Ctrl'],\n  ['➜', '➜'], ['⤓', '⤓'], ['➜', '➜']];\nconst codeKeys5 = ['ControlLeft', 'AltLeft', 'MetaLeft', 'Space', 'MetaRight', 'AltRight',\n  'ControlRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight'];\nconst keysAll = [keys1, keys2, keys3, keys4, keys5];\nconst codeKeysAll = [codeKeys1, codeKeys2, codeKeys3, codeKeys4, codeKeys5];\n/**\n * Creating new element in DOM-tree\n * @param {string} tag - tag of the new element(h1,div, etc...)\n * @param {string[] | null } [className] - list of classes which will appear at new element\n * @param {HTMLElement | null } [target] - where we should append our element\n * @param {string | null} [innerText] - inner text inside element tags\n * @return {HTMLElement}\n * */\nfunction createNewElement(tag, className, target, innerText) {\n  const element = document.createElement(tag);\n  if (className) element.classList.add(...className);\n  if (target) target.append(element);\n  if (innerText) element.innerText = innerText;\n  return element;\n}\n/**\n * Appending all our keyboard keys for needed row\n * @param {string[]} key - associative array of symbols on one key\n * @param {HTMLElement} row - row element\n * @param {number[]} indexes - indexes to help associate with prepared keyCodes array\n * */\nfunction appendKeys(key, row, indexes) {\n  const [i, j] = indexes;\n  const [lower, upper, ruFirst, ruSecond] = key;\n  const formattedClassNames = key.map((el) => `_${el === ' ' ? 'Spacebar' : el}_`);\n  const elClasses = ['__key', ...formattedClassNames, `code_${codeKeysAll[i][j]}`];\n  const element = createNewElement('div', elClasses, row);\n  const text = createNewElement('h2', null, element);\n  createNewElement('span', ['_lower'], text, lower);\n  if (upper) createNewElement('span', ['_upper', 'invisible'], text, upper);\n  if (ruFirst) createNewElement('span', ['_ruF', 'invisible'], text, ruFirst);\n  if (ruSecond) createNewElement('span', ['_ruS', 'invisible'], text, ruSecond);\n}\n/**\n * Choosing current button if there can be intersections in symbols\n * e.g. ru: SHIFT + 2 = \" and en: SHIFT + ' = \"\n * @param {HTMLElement[]} buttons - elements which should be reduced to one correct\n * @param {KeyboardEvent} event - keyboard event which occurred\n * @return {HTMLElement[]} - still returning array but only with one element\n *                            (looks like bad code implementation)\n * */\nfunction chooseButton(buttons, event) {\n  if (buttons.length === 1) return buttons;\n  const res = buttons.find((button) => Array.from(button.classList).includes(`code_${event.code}`));\n  return [res];\n}\n/**\n * Searching pressed key on our virtual keyboard\n * @param {KeyboardEvent} event - keyboard event which occurred\n * @param {HTMLElement[]} keyCaps - keyboard keys HTML elements\n * @return {HTMLElement[] | null} - array with one element or nothing if failed to find\n* */\nfunction findPressedButton(event, keyCaps) {\n  let current;\n  if (event.code === 'ShiftLeft') current = [keyCaps.filter((el) => el.classList.value.includes('_Shift_'))[0]];\n  else if (event.code === 'ShiftRight') current = [keyCaps.filter((el) => el.classList.value.includes('_Shift_'))[1]];\n  else if (event.code === 'AltLeft') current = [keyCaps.filter((el) => el.classList.value.includes('_⌥_'))[0]];\n  else if (event.code === 'AltRight') current = [keyCaps.filter((el) => el.classList.value.includes('_⌥_'))[1]];\n  else if (event.code === 'ControlLeft') current = [keyCaps.filter((el) => el.classList.value.includes('_Ctrl_'))[0]];\n  else if (event.code === 'ControlRight') current = [keyCaps.filter((el) => el.classList.value.includes('_Ctrl_'))[1]];\n  else if (event.code === 'MetaLeft') current = [keyCaps.filter((el) => el.classList.value.includes('⌘'))[0]];\n  else if (event.code === 'MetaRight') current = [keyCaps.filter((el) => el.classList.value.includes('⌘'))[1]];\n  else if (event.code === 'ArrowUp') current = [keyCaps.find((el) => el.classList.value.includes('_⤒_'))];\n  else if (event.code === 'ArrowLeft') current = [keyCaps.filter((el) => el.classList.value.includes('_➜_'))[0]];\n  else if (event.code === 'ArrowDown') current = [keyCaps.find((el) => el.classList.value.includes('_⤓_'))];\n  else if (event.code === 'ArrowRight') current = [keyCaps.filter((el) => el.classList.value.includes('_➜_'))[1]];\n  else current = keyCaps.filter((el) => el.classList.value.includes(`_${event.key === ' ' ? 'Spacebar' : event.key}_`));\n  if (!current.length) return null;\n  current = chooseButton(current, event);\n  return current;\n}\n/**\n * Changing current keyboard language\n * @param {HTMLElement} keyboard\n * */\nfunction keyboardLangChanger(keyboard) {\n  const keyboardKeys = Array.from(keyboard.querySelectorAll('.__key'));\n  const flag = keyboardKeys.find((el) => el.classList.contains('_Lan_'));\n  keyboardKeys.forEach((key) => {\n    const lowerSpan = key.querySelector('._lower');\n    const upperSpan = key.querySelector('._upper');\n    const ruFirst = key.querySelector('._ruF');\n    const ruSecond = key.querySelector('._ruS');\n    if (currentLang === 'ru') flag.style.backgroundImage = 'url(\"./img/russia.png\")';\n    if (currentLang === 'en') {\n      flag.style.backgroundImage = 'url(\"./img/united-kingdom.png\")';\n      if (ruFirst && ruSecond) {\n        ruFirst.classList.add('invisible');\n        ruSecond.classList.add('invisible');\n        if (shiftStatus && capsLockStatus) lowerSpan.classList.remove('invisible');\n        else if (shiftStatus || capsLockStatus) upperSpan.classList.remove('invisible');\n        else lowerSpan.classList.remove('invisible');\n      } else if (ruFirst && shiftStatus) {\n        ruFirst.classList.add('invisible');\n        upperSpan.classList.remove('invisible');\n      }\n    } else if (ruFirst && ruSecond) {\n      lowerSpan.classList.add('invisible');\n      upperSpan.classList.add('invisible');\n      if (shiftStatus && capsLockStatus) ruFirst.classList.remove('invisible');\n      else if (shiftStatus || capsLockStatus) ruSecond.classList.remove('invisible');\n      else ruFirst.classList.remove('invisible');\n    } else if (ruFirst && shiftStatus) {\n      ruFirst.classList.remove('invisible');\n      upperSpan.classList.add('invisible');\n    }\n  });\n}\n/**\n * Handle CAPSLOCK button, changes ONLY letters at keyboard\n * @param {HTMLElement} keyboard - keyboard HTML element\n * */\nfunction capsLockChanger(keyboard) {\n  capsLockStatus = !capsLockStatus;\n  if (currentLang === 'en') {\n    const lowerSpans = Array.from(keyboard.querySelectorAll('._lower'))\n      .filter((key) => enAlphabet.includes(key.innerText));\n    const upperSpans = Array.from(keyboard.querySelectorAll('._upper'))\n      .filter((key) => enAlphabet.includes(key.innerText.toLowerCase()));\n    const total = [...lowerSpans, ...upperSpans];\n    total.forEach((key) => key.classList.toggle('invisible'));\n  } else {\n    const ruFirst = Array.from(keyboard.querySelectorAll('._ruF'))\n      .filter((key) => ruAlphabet.includes(key.innerText));\n    const ruSecond = Array.from(keyboard.querySelectorAll('._ruS'))\n      .filter((key) => ruAlphabet.includes(key.innerText.toLowerCase()));\n    const total = [...ruFirst, ...ruSecond];\n    total.forEach((key) => key.classList.toggle('invisible'));\n  }\n}\n/**\n * this foo is transliterating our symbols,\n * e.g. user system language is RUSSIAN, but keyboard is ENGLISH\n * @param {string} key - event.key\n * @param {HTMLElement[]} symbolKit - array with one element (not as good as could be)\n * @returns {string} - needed symbol wich will appear in textarea\n * */\nfunction languageChanger(key, symbolKit) {\n  const [kit] = symbolKit;\n  if (key === 'Tab') return '\\t';\n  if (key === 'Enter') return '\\n';\n  if (key === ' ') return ' ';\n  if (invisibleSymbols.includes(key)) return '';\n  const span = Array.from(kit.querySelectorAll('span'));\n  const activeSpan = span.find((el) => !el.classList.value.includes('invisible'));\n  return activeSpan.innerText;\n}\n/**\n * handle pressing SHIFT, there all symbols should change, not only letters\n * @param {KeyboardEvent} event - keyboard event which occurred\n * @param {HTMLElement} keyboard - keyboard HTML element\n * @param {string} status - keydown or keyup occurred\n * */\nfunction shiftButtonHandler(event, keyboard, status) {\n  if (shiftStatus === 2 && status === 'down') return;\n  if (shiftStatus === 1 && status === 'up') return;\n  const keyboardKeys = Array.from(keyboard.querySelectorAll('.__key'));\n  keyboardKeys.forEach((key) => {\n    const lowerSpan = key.querySelector('._lower');\n    const upperSpan = key.querySelector('._upper');\n    const ruFirst = key.querySelector('._ruF');\n    const ruSecond = key.querySelector('._ruS');\n    if (currentLang === 'en') {\n      if (lowerSpan && upperSpan) {\n        lowerSpan.classList.toggle('invisible');\n        upperSpan.classList.toggle('invisible');\n      }\n    } else if (ruFirst && ruSecond) {\n      ruFirst.classList.toggle('invisible');\n      ruSecond.classList.toggle('invisible');\n    } else if (lowerSpan && ruFirst) {\n      lowerSpan.classList.toggle('invisible');\n      ruFirst.classList.toggle('invisible');\n    } else {\n      lowerSpan.classList.toggle('invisible');\n      upperSpan.classList.toggle('invisible');\n    }\n  });\n}\nconst body = document.querySelector('body');\n\nconst h1 = document.createElement('h1');\nh1.innerText = 'VIRTUAL KEYBOARD';\nbody.append(h1);\n\nconst textarea = document.createElement('textarea');\ntextarea.addEventListener('keydown', (event) => {\n  const codes = ['ArrowLeft', 'ArrowRight', 'ArrowDown', 'ArrowUp'];\n  if (codes.includes(event.code)) return;\n  event.preventDefault();\n});\nbody.append(textarea);\ntextarea.focus();\nconst keyboard = document.createElement('div');\nkeyboard.classList.add('__keyboard');\nbody.append(keyboard);\n/* LANGUAGE BAR */\nconst languageBar = document.createElement('h1');\nlanguageBar.classList.add('__lang-bar');\nlanguageBar.innerText = `Current language is ${currentLang}`;\nbody.append(languageBar);\ncreateNewElement('h2', null, body, 'Keyboard was made in MacOS system');\ncreateNewElement('h2', null, body, 'To switch language press CONTROL + OPTION(⌥) or CTRL + ALT on WIN');\ncreateNewElement('h2', null, body, 'Also to change current language click on flag button');\ncreateNewElement('h2', null, body, 'Click on ♺ if you want to clear textarea field');\ncreateNewElement('h2', null, body, 'Optimal screen width should start from 1240 px :)');\n\nkeysAll.forEach((keys, index) => {\n  const row = createNewElement('div', ['__row']);\n  keys.forEach((key, i) => appendKeys(key, row, [index, i]));\n  keyboard.append(row);\n});\n\nconst keyCaps = Array.from(keyboard.querySelectorAll('.__key'));\ndocument.addEventListener('keydown', (event) => {\n  if (event.ctrlKey && event.altKey) {\n    currentLang = currentLang === 'en' ? 'ru' : 'en';\n    window.localStorage.setItem('lang', currentLang);\n    languageBar.innerText = `Current language is ${currentLang}`;\n    keyboardLangChanger(keyboard);\n  }\n  const current = findPressedButton(event, keyCaps);\n  if (current === null) return;\n  current.forEach((cur) => cur.classList.add('active'));\n  if (event.key === 'Backspace' && textarea.selectionStart) {\n    const start = textarea.selectionStart - 1;\n    const currentCharArray = textarea.value.split('');\n    currentCharArray.splice(textarea.selectionStart - 1, 1);\n    textarea.value = currentCharArray.join('');\n    textarea.setSelectionRange(start, start);\n    return;\n  }\n  if (event.key === 'Delete') {\n    const start = textarea.selectionStart;\n    const currentCharArray = textarea.value.split('');\n    currentCharArray.splice(textarea.selectionStart, 1);\n    textarea.value = currentCharArray.join('');\n    textarea.setSelectionRange(start, start);\n    return;\n  }\n  if (event.code === 'Space') {\n    textarea.value += ' ';\n    return;\n  }\n  if (event.key === 'Tab') { event.preventDefault(); }\n  if (event.key === 'CapsLock') capsLockChanger(keyboard);\n  if (event.key === 'Shift') {\n    shiftStatus += 1;\n    shiftButtonHandler(event, keyboard, 'down');\n  }\n  if (event.key === 'Delete' || event.key === 'Shift'\n      || event.code === 'ArrowLeft' || event.code === 'ArrowRight'\n    || event.code === 'ArrowUp' || event.code === 'ArrowDown') return;\n  const newSymbol = languageChanger(event.key, current);\n\n  if (newSymbol === '♺') textarea.value = '';\n  else if (newSymbol === 'Lan') {\n    currentLang = currentLang === 'en' ? 'ru' : 'en';\n    window.localStorage.setItem('lang', currentLang);\n    languageBar.innerText = `Current language is ${currentLang}`;\n    keyboardLangChanger(keyboard);\n  } else if (newSymbol === 'Git') window.open(GitURL, 'blank');\n  else {\n    const start = textarea.selectionStart + 1;\n    textarea.value = textarea.value.slice(0, start - 1)\n        + newSymbol + textarea.value.slice(start - 1);\n    textarea.setSelectionRange(start, start);\n    // textarea.value += newSymbol;\n  }\n});\ndocument.addEventListener('keyup', (event) => {\n  if (event.key === 'CapsLock') {\n    capsLockChanger(keyboard);\n  }\n  if (event.key === 'Shift') {\n    shiftStatus -= 1;\n    shiftButtonHandler(event, keyboard, 'up');\n  }\n  const current = findPressedButton(event, keyCaps);\n  if (current === null) return;\n  current.forEach((cur) => cur.classList.remove('active'));\n});\nkeyboardLangChanger(keyboard);\nconst keyDivs = document.querySelectorAll('.__key');\nkeyDivs.forEach((key) => {\n  const code = Array.from(key.classList).find((el) => el.includes('code')).slice(5);\n  let customKey;\n  if (code === 'ShiftLeft' || code === 'ShiftRight') customKey = 'Shift';\n  else if (code === 'CapsLock') customKey = 'CapsLock';\n  else if (code === 'Tab') customKey = 'Tab';\n  else if (code === 'Backspace') customKey = 'Backspace';\n  else if (code === 'ControlLeft' || code === 'ControlRight') customKey = 'Control';\n  else if (code === 'AltLeft' || code === 'AltRight') customKey = 'Alt';\n  else if (code === 'MetaLeft' || code === 'MetaRight') customKey = 'Meta';\n  else if (code === 'Delete') customKey = 'Delete';\n  else if (code === 'Enter') customKey = 'Enter';\n  else if (code === 'ArrowRight') customKey = 'ArrowRight';\n  else if (code === 'ArrowLeft') customKey = 'ArrowLeft';\n  else if (code === 'ArrowDown') customKey = 'ArrowDown';\n  else if (code === 'ArrowUp') customKey = 'ArrowUp';\n  else customKey = undefined;\n  const keyDown = new KeyboardEvent('keydown', { code, key: customKey });\n  const keyUp = new KeyboardEvent('keyup', { code, key: customKey });\n  key.addEventListener('mousedown', (e) => {\n    e.preventDefault();\n    if (code === 'CapsLock' && key.classList.contains('active')) {\n      document.dispatchEvent(keyUp);\n      return;\n    }\n    if (keyDown.code === 'ArrowLeft' && textarea.selectionStart) {\n      textarea.setSelectionRange(textarea.selectionStart - 1, textarea.selectionStart - 1);\n    }\n    if (keyDown.code === 'ArrowRight') {\n      textarea.setSelectionRange(textarea.selectionStart + 1, textarea.selectionStart + 1);\n    }\n    if (keyDown.code === 'ArrowUp') {\n      textarea.setSelectionRange(textarea.value.length, textarea.value.length);\n    }\n    if (keyDown.code === 'ArrowDown') {\n      textarea.setSelectionRange(0, 0);\n    }\n    document.dispatchEvent(keyDown);\n  });\n  key.addEventListener('mouseup', () => {\n    if (code === 'CapsLock') return;\n    document.dispatchEvent(keyUp);\n  });\n});\n"]}